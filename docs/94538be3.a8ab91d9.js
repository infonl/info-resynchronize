(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},p=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=r,h=p["".concat(o,".").concat(d)]||p[d]||m[d]||c;return n?a.a.createElement(h,i({ref:t},u,{components:n})):a.a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<c;u++)o[u]=n[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(1),a=n(6),c=(n(0),n(108)),o={id:"react-hooks-example",title:"Reacts + Hooks"},i={id:"react-hooks-example",title:"Reacts + Hooks",description:"# The new mix",source:"@site/docs/react-hooks-example.md",permalink:"/docs/react-hooks-example",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/react-hooks-example.md",sidebar:"someSidebar",previous:{title:"Redux + React",permalink:"/docs/redux-react-example"},next:{title:"createAsyncActions",permalink:"/docs/create-actions"}},s=[{value:"Create actions",id:"create-actions",children:[]},{value:"Dispatch the actions on the right moment",id:"dispatch-the-actions-on-the-right-moment",children:[]},{value:"Create reducers",id:"create-reducers",children:[]},{value:"HOOK IT!",id:"hook-it",children:[{value:"Implement it in your component with useReducer",id:"implement-it-in-your-component-with-usereducer",children:[]}]}],u={rightToc:s};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"the-new-mix"},"The new mix"),Object(c.b)("h2",{id:"create-actions"},"Create actions"),Object(c.b)("p",null,"Create your async actions"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"// my-actions.js\nimport { createAsyncActions } from 'resynchronize'\nconst getList = createAsyncActions('GEL_LIST')\n")),Object(c.b)("h2",{id:"dispatch-the-actions-on-the-right-moment"},"Dispatch the actions on the right moment"),Object(c.b)("p",null,"Use your created actions to set the right status on the right moment of your requests"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"// my-reducers.js\nimport { getList } from './my-actions.js'\n// Could be redux, or could be something else as far as you can get the state from it\n\nconst myGetList = (dispatch) => {\n  dispatch(getList.start()) // Loading starts\n  fetch('/api/list')\n    .then(data => {\n      dispatch(getList.done(data)) // The async action is done\n    })\n    .catch(ex => {\n      dispatch(getList.error(ex)) // The async action failed\n    })\n\n}\n")),Object(c.b)("h2",{id:"create-reducers"},"Create reducers"),Object(c.b)("p",null,"All this actions will trigger state changes thru a reducer, you can always use the action object to tackle the different moments yourself, but to simplify it even more you can use the creator function."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"// my-reducers.js\nimport { createAsyncReducer } from 'resynchronize'\nimport { getList } from './my-actions.js'\n\n// Simple implementation\nconst getListReducer = createAsyncReducer(\n  [],\n  getList\n)\n")),Object(c.b)("hr",null),Object(c.b)("h2",{id:"hook-it"},"HOOK IT!"),Object(c.b)("h3",{id:"implement-it-in-your-component-with-usereducer"},"Implement it in your component with useReducer"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"// my-component.js\nimport React, { useReducer } from 'react-redux'\nimport { getAsyncProps } from 'resynchronize'\nimport { myGetList } from './my-actions.js'\nimport { getListReducer } from './my-reducer.js'\n\n...\n\nconst MyList = ({ list, getList }) => {\n  const [state, dispatch] = useReducer(getListReducer, initialState)\n  const { status, payload, error } = getAsyncProps(state)\n\n  return (\n    <div>\n      <button onClick={() => myGetList(dispatch)}>Get the list!</button>\n      {status.error && <div className='error'>\n        Something happened: {error}\n      </div>}\n      {status.loading && <div className='loading'>\n        loading...\n      </div>}\n      {status.done && <ul className='items'>\n        {payload.map(item => <li key={item.id}>{item.name}</li>)}\n      </ul>}\n    </div>\n  )\n}\n\n\nexport default connector(MyList)\n")))}l.isMDXComponent=!0}}]);