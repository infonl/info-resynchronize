(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{104:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return u}));var a=n(1),r=n(6),c=(n(0),n(108)),s={id:"getting-started",title:"Getting started",sidebar_label:"Getting started"},o={id:"getting-started",title:"Getting started",description:"# The beggining",source:"@site/docs/getting-started.md",permalink:"/docs/getting-started",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/getting-started.md",sidebar_label:"Getting started",sidebar:"someSidebar",next:{title:"Redux + React",permalink:"/docs/redux-react-example"}},i=[{value:"Install",id:"install",children:[]},{value:"Create actions",id:"create-actions",children:[]},{value:"Dispatch the actions on the right moment",id:"dispatch-the-actions-on-the-right-moment",children:[{value:"Basic example",id:"basic-example",children:[]},{value:"Other example",id:"other-example",children:[]}]},{value:"Create reducers",id:"create-reducers",children:[]},{value:"Get payload and check status",id:"get-payload-and-check-status",children:[{value:"Quick checks",id:"quick-checks",children:[]},{value:"Individual checks",id:"individual-checks",children:[]}]},{value:"Connect?",id:"connect",children:[]}],l={rightToc:i};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"the-beggining"},"The beggining"),Object(c.b)("h2",{id:"install"},"Install"),Object(c.b)("p",null,"Copy and run this in your project folder"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"npm i --save resynchronize\n")),Object(c.b)("h2",{id:"create-actions"},"Create actions"),Object(c.b)("p",null,"Create your async actions, the returned object will contain different actions inside that can be used to set the steps of your async functions."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// my-actions.js\nimport { createAsyncActions } from 'resynchronize'\nconst getList = createAsyncActions('GEL_LIST')\n")),Object(c.b)("h2",{id:"dispatch-the-actions-on-the-right-moment"},"Dispatch the actions on the right moment"),Object(c.b)("p",null,"Use your created actions to set the right status on the right moment of your requests"),Object(c.b)("h3",{id:"basic-example"},"Basic example"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript",metastring:"{6,9,12}","{6,9,12}":!0}),"// my-actions.js\n// Could be redux, or could be something else as far as you can get the state from it\nimport store from './my-store.js'\n\nconst myGetList = (dispatch) => {\n  dispatch(getList.start()) // Loading starts\n  fetch('/api/list')\n    .then(data => {\n      dispatch(getList.done(data)) // The async action is done\n    })\n    .catch(ex => {\n      dispatch(getList.error(ex)) // The async action failed\n    })\n\n}\n")),Object(c.b)("h3",{id:"other-example"},"Other example"),Object(c.b)("p",null,"Anything that you have to wait for it can be expressed with the async actions"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript",metastring:"{6,8}","{6,8}":!0}),"// my-actions.js\n// Could be redux, or could be something else as far as you can get the state from it\nimport store from './my-store.js'\n\nconst myGetList = (dispatch) => {\n  dispatch(getList.start()) // Loading starts\n  setTimeOut(() => {\n    dispatch(getList.done('the wait is over!')) // The async action is done\n  }, 1000)\n}\n")),Object(c.b)("hr",null),Object(c.b)("h2",{id:"create-reducers"},"Create reducers"),Object(c.b)("p",null,"All this actions will trigger state changes thru a reducer, you can always use the action object to tackle the different moments yourself, but to simplify it even more you can use the creator function."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// my-reducers.js\nimport { createAsyncReducer } from 'resynchronize'\nimport { getList } from './my-actions.js'\n\n// Simple implementation\nconst getListReducer = createAsyncReducer(\n  [],\n  getList\n)\n")),Object(c.b)("p",null,"Combinable with other actions"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const getListReducer = createAsyncReducer(\n  [],\n  { getList }\n)\n")),Object(c.b)("p",null,"Custom reducers for the different parts, we will go there eventually dont worry"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const getListReducer = createAsyncReducer(\n  [],\n  {\n    [getList]: {\n      done: (currentPayload, action) => action.payload || currrentPayload\n    }\n  }\n)\n")),Object(c.b)("h2",{id:"get-payload-and-check-status"},"Get payload and check status"),Object(c.b)("p",null,"With the actions being reduced, the next step is using this async state on your code. You can always use it raw, the shape of the state will be consistent if you use the creators, but again to simplify our logic and controls you can use the getters and be completely sure that no matter what internal changes could happen on the internals, it will be reliable."),Object(c.b)("h3",{id:"quick-checks"},"Quick checks"),Object(c.b)("p",null,"Simple and quick way to obtain the async state, it will contain the status object with all the status on boolean shape, the payload (as you set it on your dispatchs) and the error (same as payload)"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// my-reducers.js\nimport { getAsyncProps } from 'resynchronize'\n// Could be redux, or could be something else as far as you can get the state from it\nimport store from './my-store.js'\n\nconst state = store.getState()\nconst list = getAsyncProps(state.list)\n/*\nlist = {\n  status: {\n    done: false,\n    loading: false,\n    cancelled: false,\n    error: false\n  },\n  payload: [],\n  error: null\n}\n*/\n")),Object(c.b)("h3",{id:"individual-checks"},"Individual checks"),Object(c.b)("p",null,"In case you don't need all the object, just basic checks, you can use the individual getters."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// my-reducers.js\nimport { isDone, isLoading, isCancelled, hasError, getError, getPayload } from 'resynchronize'\n// Could be redux, or could be something else as far as you can get the state from it\nimport store from './my-store.js'\n\nconst state = store.getState()\nconst done = isDone(state.list)\nconst loading = isLoading(state.list)\nconst cancelled = isCancelled(state.list)\nconst someError = hasError(state.list)\nconst theErrorObject = getError(state.list)\nconst payload = getPayload(state.list)\n")),Object(c.b)("hr",null),Object(c.b)("h2",{id:"connect"},"Connect?"),Object(c.b)("p",null,"Now, we need to use this to render something right? check the examples"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/redux-react-example"}),"Redux + React example"))))}u.isMDXComponent=!0},108:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},d=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(n),p=a,h=d["".concat(s,".").concat(p)]||d[p]||b[p]||c;return n?r.a.createElement(h,o({ref:t},l,{components:n})):r.a.createElement(h,o({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,s=new Array(c);s[0]=p;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<c;l++)s[l]=n[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);